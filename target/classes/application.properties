spring.application.name=itinerarly-BE

spring.profiles.active=dev

# Server Configuration
server.port=${PORT:8080}

# Database configuration (for dev profile)
spring.datasource.url=${db-url:jdbc:mysql://127.0.0.1:3306/itinerarly}?useSSL=true&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true
spring.datasource.username=${db-username}
spring.datasource.password=${db-password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Frontend URL configuration (removed trailing slash)
app.frontend.url=${FRONTEND_URL:https://itinerarly-fe.vercel.app}

#jwt
JWT_SECRET=${JWT-Secret}

# AI token count
app.daily-token-limit=${APP_DAILY_TOKEN_LIMIT:6}

#GitHub OAuth
spring.security.oauth2.client.registration.github.client-id=${github-client-id}
spring.security.oauth2.client.registration.github.client-secret=${github-secret}
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

#Google OAuth
spring.security.oauth2.client.registration.google.client-id=${google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${google-secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Session and Cookie Configuration for Cross-Domain Support
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=false
server.servlet.session.cookie.max-age=86400

# CORS Configuration
spring.web.cors.allowed-origins=${app.frontend.url}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.exposed-headers=Set-Cookie,Authorization,X-Auth-Token,Access-Control-Allow-Credentials
